/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_physics_Manager */

#ifndef _Included_com_physics_Manager
#define _Included_com_physics_Manager
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_physics_Manager
 * Method:    createNativeObject
 * Signature: (IIIIIII)J
 */
JNIEXPORT jlong JNICALL Java_com_physics_Manager_createNativeObject
  (JNIEnv *, jobject, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     com_physics_Manager
 * Method:    destroyNativeObject
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_physics_Manager_destroyNativeObject
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_physics_Manager
 * Method:    update
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_physics_Manager_update
  (JNIEnv *, jobject);

/*
 * Class:     com_physics_Manager
 * Method:    dropP
 * Signature: (IIIIIIIIIIIIII)I
 */
JNIEXPORT jint JNICALL Java_com_physics_Manager_dropP
  (JNIEnv *, jobject, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     com_physics_Manager
 * Method:    drop1
 * Signature: (IIIIIIIIII)I
 */
JNIEXPORT jint JNICALL Java_com_physics_Manager_drop1
  (JNIEnv *, jobject, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     com_physics_Manager
 * Method:    drop2
 * Signature: (IIIIIIIII)I
 */
JNIEXPORT jint JNICALL Java_com_physics_Manager_drop2
  (JNIEnv *, jobject, jint, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     com_physics_Manager
 * Method:    forward
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_physics_Manager_forward
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_physics_Manager
 * Method:    stop
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_physics_Manager_stop
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_physics_Manager
 * Method:    thrust
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_physics_Manager_thrust
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_physics_Manager
 * Method:    left
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_physics_Manager_left
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_physics_Manager
 * Method:    right
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_physics_Manager_right
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_physics_Manager
 * Method:    xForce
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_physics_Manager_xForce
  (JNIEnv *, jobject);

/*
 * Class:     com_physics_Manager
 * Method:    yForce
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_physics_Manager_yForce
  (JNIEnv *, jobject);

/*
 * Class:     com_physics_Manager
 * Method:    removeDead
 * Signature: ([I)V
 */
JNIEXPORT void JNICALL Java_com_physics_Manager_removeDead
  (JNIEnv *, jobject, jintArray);

/*
 * Class:     com_physics_Manager
 * Method:    shoot
 * Signature: (IIII)I
 */
JNIEXPORT jint JNICALL Java_com_physics_Manager_shoot
  (JNIEnv *, jobject, jint, jint, jint, jint);

/*
 * Class:     com_physics_Manager
 * Method:    dropAsteroid
 * Signature: (IIIIIIIII)I
 */
JNIEXPORT jint JNICALL Java_com_physics_Manager_dropAsteroid
  (JNIEnv *, jobject, jint, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     com_physics_Manager
 * Method:    dropBlackHole
 * Signature: (IIIIIIIII)I
 */
JNIEXPORT jint JNICALL Java_com_physics_Manager_dropBlackHole
  (JNIEnv *, jobject, jint, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     com_physics_Manager
 * Method:    dropEnemy
 * Signature: (IIIIIIIII)I
 */
JNIEXPORT jint JNICALL Java_com_physics_Manager_dropEnemy
  (JNIEnv *, jobject, jint, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     com_physics_Manager
 * Method:    dropMeteor
 * Signature: (IIIIIIIII)I
 */
JNIEXPORT jint JNICALL Java_com_physics_Manager_dropMeteor
  (JNIEnv *, jobject, jint, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     com_physics_Manager
 * Method:    dropUser
 * Signature: (IIIIIIIIIIIIII)I
 */
JNIEXPORT jint JNICALL Java_com_physics_Manager_dropUser
  (JNIEnv *, jobject, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     com_physics_Manager
 * Method:    display
 * Signature: (IIII)[[I
 */
JNIEXPORT jobjectArray JNICALL Java_com_physics_Manager_display
  (JNIEnv *, jobject, jint, jint, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
